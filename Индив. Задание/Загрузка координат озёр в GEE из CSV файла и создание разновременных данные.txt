// Загрузка координат озёр из CSV файла
var lakesData = ee.FeatureCollection("users/TheGZ/coordinates");


// Проверяем, что данные загружены корректно
print("Lakes Data:", lakesData);

// Функция для расчета площади водных объектов
function getWaterArea(lake) {
  var lakeGeometry = lake.geometry();
  
  var imageCollection = ee.ImageCollection("COPERNICUS/S2")
    .filterBounds(lakeGeometry)
    .filterDate('2021-01-01', '2023-12-31')
    .select('B8'); // Выбираем инфракрасный канал для анализа

  // Применяем функцию для расчета площади
  var areaCollection = imageCollection.map(function(image) {
    var water = image.gt(0.2); // Применяем порог для выделения водных объектов
    var area = water.multiply(ee.Image.pixelArea()).reduceRegion({
      reducer: ee.Reducer.sum(),
      geometry: lakeGeometry,
      scale: 30,
      maxPixels: 1e9
    });
    
    return ee.Feature(null, {
      'date': image.date().format('YYYY-MM-DD'),
      'area': ee.Number(area.get('B8')).divide(1e6) // Площадь в гектарах
    }).set('lake_id', lake.id()); // Добавляем идентификатор озера
  });

  return areaCollection;
}

// Применяем функцию к каждому озеру и объединяем результаты
var lakesAreaCollection = lakesData.map(getWaterArea).flatten();

// Печатаем количество элементов в новой коллекции
print("Lakes Area Collection Count:", lakesAreaCollection.size());

// Получаем информацию о коллекции
lakesAreaCollection.getInfo(function(collectionInfo) {
  print("Lakes Area Collection Info:", collectionInfo);
});

// Экспорт данных в Google Drive
Export.table.toDrive({
  collection: lakesAreaCollection,
  description: 'Lakes_Area_2018_2023',
  fileFormat: 'CSV'
});
